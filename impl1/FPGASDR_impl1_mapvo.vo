
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.10.2.115

// ldbanno -n Verilog -o FPGASDR_impl1_mapvo.vo -w -neg -gui -msgset C:/Users/user/lattice/FPGASDR/promote.xml FPGASDR_impl1_map.ncd 
// Netlist created on Sat Nov 24 18:07:44 2018
// Netlist written on Sat Nov 24 18:09:24 2018
// Design is for device LCMXO2-7000HE
// Design is for package TQFP144
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module top ( i_Rx_Serial, o_Tx_Serial, o_Rx_DV, o_Rx_Byte, MYLED, RFIn );
  input  i_Rx_Serial, RFIn;
  output o_Tx_Serial, o_Rx_DV;
  output [7:0] o_Rx_Byte;
  output [7:0] MYLED;
  wire   \uart_tx1/r_Clock_Count_14 , \uart_tx1/r_Clock_Count_13 , 
         \uart_tx1/n71 , \uart_tx1/n72 , \uart_tx1/r_SM_Main_2 , 
         \uart_tx1/n916 , osc_clk, \uart_tx1/n1293 , \uart_tx1/n1294 , 
         \uart_tx1/r_Clock_Count_12 , \uart_tx1/r_Clock_Count_11 , 
         \uart_tx1/n73 , \uart_tx1/n74 , \uart_tx1/n1292 , 
         \uart_tx1/r_Clock_Count_10 , \uart_tx1/r_Clock_Count_9 , 
         \uart_tx1/n75 , \uart_tx1/n76 , \uart_tx1/n1291 , 
         \uart_tx1/r_Clock_Count_8 , \uart_tx1/r_Clock_Count_7 , 
         \uart_tx1/n77 , \uart_tx1/n78 , \uart_tx1/n1290 , 
         \uart_tx1/r_Clock_Count_6 , \uart_tx1/r_Clock_Count_5 , 
         \uart_tx1/n79 , \uart_tx1/n80 , \uart_tx1/n1289 , 
         \uart_tx1/r_Clock_Count_4 , \uart_tx1/r_Clock_Count_3 , 
         \uart_tx1/n81 , \uart_tx1/n82 , \uart_tx1/n1288 , 
         \uart_tx1/r_Clock_Count_15 , \uart_tx1/n70 , 
         \uart_tx1/r_Clock_Count_2 , \uart_tx1/r_Clock_Count_1 , 
         \uart_tx1/n83 , \uart_tx1/n84 , \uart_tx1/n1287 , \uart_tx1/n16 , 
         \uart_tx1/n85 , \uart_rx1/r_Clock_Count_15 , \uart_rx1/n70 , 
         \uart_rx1/osc_clk_enable_50 , \uart_rx1/n928 , \uart_rx1/n1286 , 
         \uart_rx1/r_Clock_Count_14 , \uart_rx1/r_Clock_Count_13 , 
         \uart_rx1/n71 , \uart_rx1/n72 , \uart_rx1/n1285 , 
         \uart_rx1/r_Clock_Count_12 , \uart_rx1/r_Clock_Count_11 , 
         \uart_rx1/n73 , \uart_rx1/n74 , \uart_rx1/n1284 , 
         \uart_rx1/r_Clock_Count_10 , \uart_rx1/r_Clock_Count_9 , 
         \uart_rx1/n75 , \uart_rx1/n76 , \uart_rx1/n1283 , 
         \uart_rx1/r_Clock_Count_8 , \uart_rx1/r_Clock_Count_7 , 
         \uart_rx1/n77 , \uart_rx1/n78 , \uart_rx1/n1282 , 
         \uart_rx1/r_Clock_Count_6 , \uart_rx1/r_Clock_Count_5 , 
         \uart_rx1/n79 , \uart_rx1/n80 , \uart_rx1/n1281 , 
         \uart_rx1/r_Clock_Count_4 , \uart_rx1/r_Clock_Count_3 , 
         \uart_rx1/n81 , \uart_rx1/n82 , \uart_rx1/n1280 , 
         \uart_rx1/r_Clock_Count_2 , \uart_rx1/r_Clock_Count_1 , 
         \uart_rx1/n83 , \uart_rx1/n84 , \uart_rx1/n1279 , 
         \uart_rx1/r_Clock_Count_0 , \uart_rx1/n85 , \Mixer1/RFInR , 
         \Mixer1/MixerOutSin_63_N_137_7 , \uart_rx1/r_Rx_Data_R , MYLED_c, 
         \uart_rx1/r_Rx_Data , \uart_rx1/r_SM_Main_1 , \uart_rx1/r_SM_Main_0 , 
         \uart_rx1/r_SM_Main_2_N_552_2 , \uart_rx1/r_SM_Main_2 , 
         \uart_rx1/o_Rx_DV_N_607 , \uart_rx1/osc_clk_enable_22 , o_Rx_DV_c_0, 
         \uart_rx1/osc_clk_enable_13 , \uart_tx1/r_Bit_Index_2 , 
         \uart_tx1/r_Bit_Index_0 , \uart_tx1/r_Bit_Index_1 , 
         \uart_tx1/r_SM_Main_1 , \uart_tx1/o_Tx_Serial_N_684 , 
         \uart_tx1/r_SM_Main_0 , \uart_tx1/n3 , o_Tx_Serial_c, 
         \uart_tx1/n1520 , \uart_rx1/r_Bit_Index_1 , \uart_rx1/r_Bit_Index_0 , 
         \uart_rx1/n1387 , \uart_rx1/n1389 , \uart_rx1/n1518 , 
         \uart_rx1/r_Bit_Index_2 , \uart_rx1/n1413 , 
         \uart_rx1/osc_clk_enable_52 , \uart_rx1/n1521 , 
         \uart_rx1/r_SM_Main_2_N_558_0 , \uart_rx1/n1508 , \uart_rx1/n1519 , 
         \uart_rx1/n1259 , \uart_rx1/n4 , \uart_rx1/n1394 , \uart_rx1/n1419 , 
         \uart_tx1/n1400 , \uart_tx1/n1402 , \uart_tx1/n1385 , 
         \uart_tx1/osc_clk_enable_51 , \uart_tx1/r_SM_Main_2_N_646_1 , 
         \uart_tx1/n1417 , \uart_tx1/n656 , \uart_tx1/n3_adj_689 , 
         \uart_tx1/n657 , \uart_tx1/n10_adj_690 , \uart_tx1/n1305 , 
         o_Rx_Byte_c_5, o_Rx_Byte_c_4, \uart_tx1/osc_clk_enable_30 , VCC_net, 
         \uart_tx1/r_Tx_Data_4 , \uart_tx1/r_Tx_Data_5 , o_Rx_Byte_c_7, 
         o_Rx_Byte_c_6, \uart_rx1/n6_adj_687 , \uart_tx1/r_Tx_Data_6 , 
         \uart_rx1/n1310 , \uart_tx1/r_Tx_Data_7 , \uart_tx1/n1451 , 
         \uart_tx1/n1450 , \uart_tx1/r_Tx_Data_3 , \uart_tx1/r_Tx_Data_2 , 
         \uart_tx1/r_Tx_Data_1 , \uart_tx1/r_Tx_Data_0 , \uart_tx1/n1198 , 
         \uart_tx1/n43 , \uart_rx1/osc_clk_enable_54 , o_Rx_Byte_c_3, 
         \uart_tx1/n10 , \uart_rx1/osc_clk_enable_53 , o_Rx_Byte_c_2, 
         \uart_rx1/n6 , \uart_rx1/osc_clk_enable_3 , 
         \uart_rx1/osc_clk_enable_56 , \uart_rx1/n1444 , \Mixer1/RFInR1 , 
         RFIn_c, \uart_rx1/n6_adj_688 , \uart_rx1/n1425 , i_Rx_Serial_c, 
         \uart_rx1/n8 , \uart_rx1/osc_clk_enable_16 , o_Rx_Byte_c_0, 
         \uart_rx1/osc_clk_enable_2 , \uart_rx1/osc_clk_enable_55 , 
         o_Rx_Byte_c_1, VCCI;

  uart_tx1_SLICE_0 \uart_tx1/SLICE_0 ( .A1(\uart_tx1/r_Clock_Count_14 ), 
    .A0(\uart_tx1/r_Clock_Count_13 ), .DI1(\uart_tx1/n71 ), 
    .DI0(\uart_tx1/n72 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n916 ), 
    .CLK(osc_clk), .FCI(\uart_tx1/n1293 ), .F0(\uart_tx1/n72 ), 
    .Q0(\uart_tx1/r_Clock_Count_13 ), .F1(\uart_tx1/n71 ), 
    .Q1(\uart_tx1/r_Clock_Count_14 ), .FCO(\uart_tx1/n1294 ));
  uart_tx1_SLICE_1 \uart_tx1/SLICE_1 ( .A1(\uart_tx1/r_Clock_Count_12 ), 
    .A0(\uart_tx1/r_Clock_Count_11 ), .DI1(\uart_tx1/n73 ), 
    .DI0(\uart_tx1/n74 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n916 ), 
    .CLK(osc_clk), .FCI(\uart_tx1/n1292 ), .F0(\uart_tx1/n74 ), 
    .Q0(\uart_tx1/r_Clock_Count_11 ), .F1(\uart_tx1/n73 ), 
    .Q1(\uart_tx1/r_Clock_Count_12 ), .FCO(\uart_tx1/n1293 ));
  uart_tx1_SLICE_2 \uart_tx1/SLICE_2 ( .A1(\uart_tx1/r_Clock_Count_10 ), 
    .A0(\uart_tx1/r_Clock_Count_9 ), .DI1(\uart_tx1/n75 ), 
    .DI0(\uart_tx1/n76 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n916 ), 
    .CLK(osc_clk), .FCI(\uart_tx1/n1291 ), .F0(\uart_tx1/n76 ), 
    .Q0(\uart_tx1/r_Clock_Count_9 ), .F1(\uart_tx1/n75 ), 
    .Q1(\uart_tx1/r_Clock_Count_10 ), .FCO(\uart_tx1/n1292 ));
  uart_tx1_SLICE_3 \uart_tx1/SLICE_3 ( .A1(\uart_tx1/r_Clock_Count_8 ), 
    .A0(\uart_tx1/r_Clock_Count_7 ), .DI1(\uart_tx1/n77 ), 
    .DI0(\uart_tx1/n78 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n916 ), 
    .CLK(osc_clk), .FCI(\uart_tx1/n1290 ), .F0(\uart_tx1/n78 ), 
    .Q0(\uart_tx1/r_Clock_Count_7 ), .F1(\uart_tx1/n77 ), 
    .Q1(\uart_tx1/r_Clock_Count_8 ), .FCO(\uart_tx1/n1291 ));
  uart_tx1_SLICE_4 \uart_tx1/SLICE_4 ( .A1(\uart_tx1/r_Clock_Count_6 ), 
    .A0(\uart_tx1/r_Clock_Count_5 ), .DI1(\uart_tx1/n79 ), 
    .DI0(\uart_tx1/n80 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n916 ), 
    .CLK(osc_clk), .FCI(\uart_tx1/n1289 ), .F0(\uart_tx1/n80 ), 
    .Q0(\uart_tx1/r_Clock_Count_5 ), .F1(\uart_tx1/n79 ), 
    .Q1(\uart_tx1/r_Clock_Count_6 ), .FCO(\uart_tx1/n1290 ));
  uart_tx1_SLICE_5 \uart_tx1/SLICE_5 ( .A1(\uart_tx1/r_Clock_Count_4 ), 
    .A0(\uart_tx1/r_Clock_Count_3 ), .DI1(\uart_tx1/n81 ), 
    .DI0(\uart_tx1/n82 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n916 ), 
    .CLK(osc_clk), .FCI(\uart_tx1/n1288 ), .F0(\uart_tx1/n82 ), 
    .Q0(\uart_tx1/r_Clock_Count_3 ), .F1(\uart_tx1/n81 ), 
    .Q1(\uart_tx1/r_Clock_Count_4 ), .FCO(\uart_tx1/n1289 ));
  uart_tx1_SLICE_6 \uart_tx1/SLICE_6 ( .A0(\uart_tx1/r_Clock_Count_15 ), 
    .DI0(\uart_tx1/n70 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n916 ), 
    .CLK(osc_clk), .FCI(\uart_tx1/n1294 ), .F0(\uart_tx1/n70 ), 
    .Q0(\uart_tx1/r_Clock_Count_15 ));
  uart_tx1_SLICE_7 \uart_tx1/SLICE_7 ( .A1(\uart_tx1/r_Clock_Count_2 ), 
    .A0(\uart_tx1/r_Clock_Count_1 ), .DI1(\uart_tx1/n83 ), 
    .DI0(\uart_tx1/n84 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n916 ), 
    .CLK(osc_clk), .FCI(\uart_tx1/n1287 ), .F0(\uart_tx1/n84 ), 
    .Q0(\uart_tx1/r_Clock_Count_1 ), .F1(\uart_tx1/n83 ), 
    .Q1(\uart_tx1/r_Clock_Count_2 ), .FCO(\uart_tx1/n1288 ));
  uart_tx1_SLICE_8 \uart_tx1/SLICE_8 ( .A1(\uart_tx1/n16 ), 
    .DI1(\uart_tx1/n85 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n916 ), 
    .CLK(osc_clk), .F1(\uart_tx1/n85 ), .Q1(\uart_tx1/n16 ), 
    .FCO(\uart_tx1/n1287 ));
  uart_rx1_SLICE_9 \uart_rx1/SLICE_9 ( .A0(\uart_rx1/r_Clock_Count_15 ), 
    .DI0(\uart_rx1/n70 ), .CE(\uart_rx1/osc_clk_enable_50 ), 
    .LSR(\uart_rx1/n928 ), .CLK(osc_clk), .FCI(\uart_rx1/n1286 ), 
    .F0(\uart_rx1/n70 ), .Q0(\uart_rx1/r_Clock_Count_15 ));
  uart_rx1_SLICE_10 \uart_rx1/SLICE_10 ( .A1(\uart_rx1/r_Clock_Count_14 ), 
    .A0(\uart_rx1/r_Clock_Count_13 ), .DI1(\uart_rx1/n71 ), 
    .DI0(\uart_rx1/n72 ), .CE(\uart_rx1/osc_clk_enable_50 ), 
    .LSR(\uart_rx1/n928 ), .CLK(osc_clk), .FCI(\uart_rx1/n1285 ), 
    .F0(\uart_rx1/n72 ), .Q0(\uart_rx1/r_Clock_Count_13 ), .F1(\uart_rx1/n71 ), 
    .Q1(\uart_rx1/r_Clock_Count_14 ), .FCO(\uart_rx1/n1286 ));
  uart_rx1_SLICE_11 \uart_rx1/SLICE_11 ( .A1(\uart_rx1/r_Clock_Count_12 ), 
    .A0(\uart_rx1/r_Clock_Count_11 ), .DI1(\uart_rx1/n73 ), 
    .DI0(\uart_rx1/n74 ), .CE(\uart_rx1/osc_clk_enable_50 ), 
    .LSR(\uart_rx1/n928 ), .CLK(osc_clk), .FCI(\uart_rx1/n1284 ), 
    .F0(\uart_rx1/n74 ), .Q0(\uart_rx1/r_Clock_Count_11 ), .F1(\uart_rx1/n73 ), 
    .Q1(\uart_rx1/r_Clock_Count_12 ), .FCO(\uart_rx1/n1285 ));
  uart_rx1_SLICE_12 \uart_rx1/SLICE_12 ( .A1(\uart_rx1/r_Clock_Count_10 ), 
    .A0(\uart_rx1/r_Clock_Count_9 ), .DI1(\uart_rx1/n75 ), 
    .DI0(\uart_rx1/n76 ), .CE(\uart_rx1/osc_clk_enable_50 ), 
    .LSR(\uart_rx1/n928 ), .CLK(osc_clk), .FCI(\uart_rx1/n1283 ), 
    .F0(\uart_rx1/n76 ), .Q0(\uart_rx1/r_Clock_Count_9 ), .F1(\uart_rx1/n75 ), 
    .Q1(\uart_rx1/r_Clock_Count_10 ), .FCO(\uart_rx1/n1284 ));
  uart_rx1_SLICE_13 \uart_rx1/SLICE_13 ( .A1(\uart_rx1/r_Clock_Count_8 ), 
    .A0(\uart_rx1/r_Clock_Count_7 ), .DI1(\uart_rx1/n77 ), 
    .DI0(\uart_rx1/n78 ), .CE(\uart_rx1/osc_clk_enable_50 ), 
    .LSR(\uart_rx1/n928 ), .CLK(osc_clk), .FCI(\uart_rx1/n1282 ), 
    .F0(\uart_rx1/n78 ), .Q0(\uart_rx1/r_Clock_Count_7 ), .F1(\uart_rx1/n77 ), 
    .Q1(\uart_rx1/r_Clock_Count_8 ), .FCO(\uart_rx1/n1283 ));
  uart_rx1_SLICE_14 \uart_rx1/SLICE_14 ( .A1(\uart_rx1/r_Clock_Count_6 ), 
    .A0(\uart_rx1/r_Clock_Count_5 ), .DI1(\uart_rx1/n79 ), 
    .DI0(\uart_rx1/n80 ), .CE(\uart_rx1/osc_clk_enable_50 ), 
    .LSR(\uart_rx1/n928 ), .CLK(osc_clk), .FCI(\uart_rx1/n1281 ), 
    .F0(\uart_rx1/n80 ), .Q0(\uart_rx1/r_Clock_Count_5 ), .F1(\uart_rx1/n79 ), 
    .Q1(\uart_rx1/r_Clock_Count_6 ), .FCO(\uart_rx1/n1282 ));
  uart_rx1_SLICE_15 \uart_rx1/SLICE_15 ( .A1(\uart_rx1/r_Clock_Count_4 ), 
    .A0(\uart_rx1/r_Clock_Count_3 ), .DI1(\uart_rx1/n81 ), 
    .DI0(\uart_rx1/n82 ), .CE(\uart_rx1/osc_clk_enable_50 ), 
    .LSR(\uart_rx1/n928 ), .CLK(osc_clk), .FCI(\uart_rx1/n1280 ), 
    .F0(\uart_rx1/n82 ), .Q0(\uart_rx1/r_Clock_Count_3 ), .F1(\uart_rx1/n81 ), 
    .Q1(\uart_rx1/r_Clock_Count_4 ), .FCO(\uart_rx1/n1281 ));
  uart_rx1_SLICE_16 \uart_rx1/SLICE_16 ( .A1(\uart_rx1/r_Clock_Count_2 ), 
    .A0(\uart_rx1/r_Clock_Count_1 ), .DI1(\uart_rx1/n83 ), 
    .DI0(\uart_rx1/n84 ), .CE(\uart_rx1/osc_clk_enable_50 ), 
    .LSR(\uart_rx1/n928 ), .CLK(osc_clk), .FCI(\uart_rx1/n1279 ), 
    .F0(\uart_rx1/n84 ), .Q0(\uart_rx1/r_Clock_Count_1 ), .F1(\uart_rx1/n83 ), 
    .Q1(\uart_rx1/r_Clock_Count_2 ), .FCO(\uart_rx1/n1280 ));
  uart_rx1_SLICE_17 \uart_rx1/SLICE_17 ( .A1(\uart_rx1/r_Clock_Count_0 ), 
    .DI1(\uart_rx1/n85 ), .CE(\uart_rx1/osc_clk_enable_50 ), 
    .LSR(\uart_rx1/n928 ), .CLK(osc_clk), .F1(\uart_rx1/n85 ), 
    .Q1(\uart_rx1/r_Clock_Count_0 ), .FCO(\uart_rx1/n1279 ));
  SLICE_18 SLICE_18( .A0(\Mixer1/RFInR ), 
    .DI0(\Mixer1/MixerOutSin_63_N_137_7 ), .M1(\uart_rx1/r_Rx_Data_R ), 
    .CLK(osc_clk), .F0(\Mixer1/MixerOutSin_63_N_137_7 ), .Q0(MYLED_c), 
    .Q1(\uart_rx1/r_Rx_Data ));
  uart_rx1_SLICE_28 \uart_rx1/SLICE_28 ( .D1(\uart_rx1/r_SM_Main_1 ), 
    .C1(\uart_rx1/r_SM_Main_0 ), .B1(\uart_rx1/r_SM_Main_2_N_552_2 ), 
    .A1(\uart_rx1/r_SM_Main_2 ), .D0(\uart_rx1/r_SM_Main_2_N_552_2 ), 
    .C0(\uart_rx1/r_SM_Main_0 ), .B0(\uart_rx1/r_SM_Main_2 ), 
    .A0(\uart_rx1/r_SM_Main_1 ), .DI0(\uart_rx1/o_Rx_DV_N_607 ), 
    .CE(\uart_rx1/osc_clk_enable_22 ), .CLK(osc_clk), 
    .F0(\uart_rx1/o_Rx_DV_N_607 ), .Q0(o_Rx_DV_c_0), 
    .F1(\uart_rx1/osc_clk_enable_13 ));
  uart_tx1_SLICE_29 \uart_tx1/SLICE_29 ( .C1(\uart_tx1/r_Bit_Index_2 ), 
    .B1(\uart_tx1/r_Bit_Index_0 ), .A1(\uart_tx1/r_Bit_Index_1 ), 
    .C0(\uart_tx1/r_SM_Main_1 ), .B0(\uart_tx1/o_Tx_Serial_N_684 ), 
    .A0(\uart_tx1/r_SM_Main_0 ), .DI0(\uart_tx1/n3 ), 
    .CE(\uart_tx1/r_SM_Main_2 ), .CLK(osc_clk), .F0(\uart_tx1/n3 ), 
    .Q0(o_Tx_Serial_c), .F1(\uart_tx1/n1520 ));
  uart_rx1_SLICE_30 \uart_rx1/SLICE_30 ( .C1(\uart_rx1/r_Bit_Index_1 ), 
    .B1(\uart_rx1/r_Bit_Index_0 ), .A1(\uart_rx1/r_SM_Main_1 ), 
    .B0(\uart_rx1/r_SM_Main_1 ), .A0(\uart_rx1/r_Bit_Index_0 ), 
    .DI1(\uart_rx1/n1387 ), .DI0(\uart_rx1/n1389 ), 
    .CE(\uart_rx1/osc_clk_enable_13 ), .CLK(osc_clk), .F0(\uart_rx1/n1389 ), 
    .Q0(\uart_rx1/r_Bit_Index_0 ), .F1(\uart_rx1/n1387 ), 
    .Q1(\uart_rx1/r_Bit_Index_1 ));
  uart_rx1_SLICE_31 \uart_rx1/SLICE_31 ( .D1(\uart_rx1/n1518 ), 
    .C1(\uart_rx1/r_Bit_Index_1 ), .B1(\uart_rx1/r_Bit_Index_0 ), 
    .A1(\uart_rx1/r_Bit_Index_2 ), .D0(\uart_rx1/r_Bit_Index_2 ), 
    .C0(\uart_rx1/r_SM_Main_1 ), .B0(\uart_rx1/r_Bit_Index_1 ), 
    .A0(\uart_rx1/r_Bit_Index_0 ), .DI0(\uart_rx1/n1413 ), 
    .CE(\uart_rx1/osc_clk_enable_13 ), .CLK(osc_clk), .F0(\uart_rx1/n1413 ), 
    .Q0(\uart_rx1/r_Bit_Index_2 ), .F1(\uart_rx1/osc_clk_enable_52 ));
  uart_rx1_SLICE_34 \uart_rx1/SLICE_34 ( .D1(\uart_rx1/r_Bit_Index_2 ), 
    .C1(\uart_rx1/n1521 ), .B1(\uart_rx1/r_SM_Main_2_N_552_2 ), 
    .A1(\uart_rx1/r_SM_Main_0 ), .C0(\uart_rx1/r_SM_Main_0 ), 
    .B0(\uart_rx1/r_Rx_Data ), .A0(\uart_rx1/r_SM_Main_2_N_558_0 ), 
    .DI0(\uart_rx1/n1508 ), .M0(\uart_rx1/r_SM_Main_1 ), 
    .LSR(\uart_rx1/r_SM_Main_2 ), .CLK(osc_clk), .OFX0(\uart_rx1/n1508 ), 
    .Q0(\uart_rx1/r_SM_Main_0 ));
  uart_rx1_SLICE_35 \uart_rx1/SLICE_35 ( .B1(\uart_rx1/r_SM_Main_2_N_558_0 ), 
    .A1(\uart_rx1/r_Rx_Data ), .D0(\uart_rx1/r_SM_Main_1 ), 
    .C0(\uart_rx1/n1519 ), .B0(\uart_rx1/r_SM_Main_0 ), 
    .A0(\uart_rx1/r_SM_Main_2_N_552_2 ), .DI0(\uart_rx1/n1259 ), 
    .LSR(\uart_rx1/r_SM_Main_2 ), .CLK(osc_clk), .F0(\uart_rx1/n1259 ), 
    .Q0(\uart_rx1/r_SM_Main_1 ), .F1(\uart_rx1/n1519 ));
  uart_rx1_SLICE_36 \uart_rx1/SLICE_36 ( .D1(\uart_rx1/r_SM_Main_2_N_552_2 ), 
    .C1(\uart_rx1/r_SM_Main_0 ), .B1(\uart_rx1/r_SM_Main_2 ), 
    .A1(\uart_rx1/r_SM_Main_1 ), .D0(\uart_rx1/n4 ), 
    .C0(\uart_rx1/r_Clock_Count_10 ), .B0(\uart_rx1/n1394 ), 
    .A0(\uart_rx1/r_Clock_Count_9 ), .DI0(\uart_rx1/r_SM_Main_2_N_552_2 ), 
    .LSR(\uart_rx1/n1419 ), .CLK(osc_clk), .F0(\uart_rx1/r_SM_Main_2_N_552_2 ), 
    .Q0(\uart_rx1/r_SM_Main_2 ), .F1(\uart_rx1/osc_clk_enable_22 ));
  uart_tx1_SLICE_37 \uart_tx1/SLICE_37 ( .C1(\uart_tx1/r_Bit_Index_1 ), 
    .B1(\uart_tx1/r_Bit_Index_0 ), .A1(\uart_tx1/n1400 ), 
    .B0(\uart_tx1/r_SM_Main_1 ), .A0(\uart_tx1/r_Bit_Index_0 ), 
    .DI1(\uart_tx1/n1402 ), .DI0(\uart_tx1/n1385 ), 
    .CE(\uart_tx1/osc_clk_enable_51 ), .CLK(osc_clk), .F0(\uart_tx1/n1385 ), 
    .Q0(\uart_tx1/r_Bit_Index_0 ), .F1(\uart_tx1/n1402 ), 
    .Q1(\uart_tx1/r_Bit_Index_1 ));
  uart_tx1_SLICE_38 \uart_tx1/SLICE_38 ( .C1(\uart_tx1/r_SM_Main_1 ), 
    .B1(\uart_tx1/r_SM_Main_2_N_646_1 ), .A1(\uart_tx1/r_SM_Main_0 ), 
    .D0(\uart_tx1/r_Bit_Index_2 ), .C0(\uart_tx1/n1400 ), 
    .B0(\uart_tx1/r_Bit_Index_0 ), .A0(\uart_tx1/r_Bit_Index_1 ), 
    .DI0(\uart_tx1/n1417 ), .CE(\uart_tx1/osc_clk_enable_51 ), .CLK(osc_clk), 
    .F0(\uart_tx1/n1417 ), .Q0(\uart_tx1/r_Bit_Index_2 ), 
    .F1(\uart_tx1/n1400 ));
  uart_tx1_SLICE_39 \uart_tx1/SLICE_39 ( .C1(\uart_tx1/r_SM_Main_2_N_646_1 ), 
    .B1(\uart_tx1/r_SM_Main_1 ), .A1(\uart_tx1/r_SM_Main_0 ), 
    .C0(\uart_tx1/r_SM_Main_0 ), .B0(\uart_tx1/r_SM_Main_2_N_646_1 ), 
    .A0(\uart_tx1/n656 ), .DI1(\uart_tx1/n3_adj_689 ), .DI0(\uart_tx1/n657 ), 
    .LSR(\uart_tx1/r_SM_Main_2 ), .CLK(osc_clk), .F0(\uart_tx1/n657 ), 
    .Q0(\uart_tx1/r_SM_Main_0 ), .F1(\uart_tx1/n3_adj_689 ), 
    .Q1(\uart_tx1/r_SM_Main_1 ));
  uart_tx1_SLICE_40 \uart_tx1/SLICE_40 ( .D1(\uart_tx1/r_SM_Main_2_N_646_1 ), 
    .C1(\uart_tx1/r_SM_Main_1 ), .B1(\uart_tx1/n1520 ), .A1(o_Rx_DV_c_0), 
    .C0(\uart_tx1/r_Clock_Count_14 ), .B0(\uart_tx1/n10_adj_690 ), 
    .A0(\uart_tx1/r_Clock_Count_11 ), .DI0(\uart_tx1/r_SM_Main_2_N_646_1 ), 
    .LSR(\uart_tx1/n1305 ), .CLK(osc_clk), .F0(\uart_tx1/r_SM_Main_2_N_646_1 ), 
    .Q0(\uart_tx1/r_SM_Main_2 ), .F1(\uart_tx1/n656 ));
  SLICE_43 SLICE_43( .M1(o_Rx_Byte_c_5), .M0(o_Rx_Byte_c_4), 
    .CE(\uart_tx1/osc_clk_enable_30 ), .CLK(osc_clk), .F0(VCC_net), 
    .Q0(\uart_tx1/r_Tx_Data_4 ), .Q1(\uart_tx1/r_Tx_Data_5 ));
  SLICE_44 SLICE_44( .C1(\uart_rx1/r_Clock_Count_0 ), 
    .B1(\uart_rx1/r_Clock_Count_6 ), .A1(\uart_rx1/r_Clock_Count_9 ), 
    .B0(\uart_rx1/r_Clock_Count_15 ), .A0(\uart_rx1/r_Clock_Count_14 ), 
    .M1(o_Rx_Byte_c_7), .M0(o_Rx_Byte_c_6), .CE(\uart_tx1/osc_clk_enable_30 ), 
    .CLK(osc_clk), .F0(\uart_rx1/n6_adj_687 ), .Q0(\uart_tx1/r_Tx_Data_6 ), 
    .F1(\uart_rx1/n1310 ), .Q1(\uart_tx1/r_Tx_Data_7 ));
  uart_tx1_i1197_SLICE_45 \uart_tx1/i1197/SLICE_45 ( 
    .C1(\uart_tx1/r_Tx_Data_7 ), .B1(\uart_tx1/r_Tx_Data_6 ), 
    .A1(\uart_tx1/r_Bit_Index_0 ), .C0(\uart_tx1/r_Bit_Index_0 ), 
    .B0(\uart_tx1/r_Tx_Data_5 ), .A0(\uart_tx1/r_Tx_Data_4 ), 
    .M1(\uart_tx1/r_Bit_Index_2 ), .M0(\uart_tx1/r_Bit_Index_1 ), 
    .FXB(\uart_tx1/n1451 ), .FXA(\uart_tx1/n1450 ), .OFX0(\uart_tx1/n1451 ), 
    .OFX1(\uart_tx1/o_Tx_Serial_N_684 ));
  uart_tx1_i1196_SLICE_46 \uart_tx1/i1196/SLICE_46 ( 
    .C1(\uart_tx1/r_Tx_Data_3 ), .B1(\uart_tx1/r_Tx_Data_2 ), 
    .A1(\uart_tx1/r_Bit_Index_0 ), .C0(\uart_tx1/r_Bit_Index_0 ), 
    .B0(\uart_tx1/r_Tx_Data_1 ), .A0(\uart_tx1/r_Tx_Data_0 ), 
    .M0(\uart_tx1/r_Bit_Index_1 ), .OFX0(\uart_tx1/n1450 ));
  SLICE_47 SLICE_47( .D1(\uart_tx1/r_Clock_Count_12 ), 
    .C1(\uart_tx1/r_Clock_Count_13 ), .B1(\uart_tx1/r_Clock_Count_15 ), 
    .A1(\uart_tx1/n1198 ), .D0(\uart_tx1/r_Clock_Count_9 ), 
    .C0(\uart_tx1/n43 ), .B0(\uart_tx1/r_Clock_Count_10 ), 
    .A0(\uart_tx1/r_Clock_Count_8 ), .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/osc_clk_enable_54 ), .CLK(osc_clk), .F0(\uart_tx1/n1198 ), 
    .Q0(o_Rx_Byte_c_3), .F1(\uart_tx1/n10_adj_690 ));
  SLICE_48 SLICE_48( .D1(\uart_tx1/r_Clock_Count_5 ), 
    .C1(\uart_tx1/r_Clock_Count_6 ), .B1(\uart_tx1/r_Clock_Count_3 ), 
    .A1(\uart_tx1/r_Clock_Count_1 ), .D0(\uart_tx1/r_Clock_Count_4 ), 
    .C0(\uart_tx1/n10 ), .B0(\uart_tx1/r_Clock_Count_7 ), 
    .A0(\uart_tx1/r_Clock_Count_2 ), .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/osc_clk_enable_53 ), .CLK(osc_clk), .F0(\uart_tx1/n43 ), 
    .Q0(o_Rx_Byte_c_2), .F1(\uart_tx1/n10 ));
  uart_rx1_SLICE_49 \uart_rx1/SLICE_49 ( .D1(\uart_rx1/r_SM_Main_0 ), 
    .C1(\uart_rx1/n6 ), .B1(\uart_rx1/r_SM_Main_1 ), 
    .A1(\uart_rx1/r_SM_Main_2 ), .B0(\uart_rx1/r_SM_Main_2_N_558_0 ), 
    .A0(\uart_rx1/r_Rx_Data ), .F0(\uart_rx1/n6 ), 
    .F1(\uart_rx1/osc_clk_enable_50 ));
  uart_rx1_SLICE_50 \uart_rx1/SLICE_50 ( .D1(\uart_rx1/r_SM_Main_2_N_552_2 ), 
    .C1(\uart_rx1/r_SM_Main_0 ), .B1(\uart_rx1/r_SM_Main_2 ), 
    .A1(\uart_rx1/r_SM_Main_1 ), .D0(\uart_rx1/r_Bit_Index_1 ), 
    .C0(\uart_rx1/n1518 ), .B0(\uart_rx1/r_Bit_Index_2 ), 
    .A0(\uart_rx1/r_Bit_Index_0 ), .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/osc_clk_enable_3 ), .CLK(osc_clk), 
    .F0(\uart_rx1/osc_clk_enable_56 ), .Q0(o_Rx_Byte_c_7), 
    .F1(\uart_rx1/n1518 ));
  SLICE_51 SLICE_51( .C1(\uart_rx1/r_SM_Main_0 ), 
    .B1(\uart_rx1/r_SM_Main_2_N_558_0 ), .A1(\uart_rx1/r_Rx_Data ), 
    .D0(\uart_rx1/r_SM_Main_1 ), .C0(\uart_rx1/r_SM_Main_2_N_552_2 ), 
    .B0(\uart_rx1/n1444 ), .A0(\uart_rx1/r_SM_Main_2 ), .M1(\Mixer1/RFInR1 ), 
    .M0(RFIn_c), .CLK(osc_clk), .F0(\uart_rx1/n928 ), .Q0(\Mixer1/RFInR1 ), 
    .F1(\uart_rx1/n1444 ), .Q1(\Mixer1/RFInR ));
  uart_rx1_SLICE_52 \uart_rx1/SLICE_52 ( .D1(\uart_rx1/n6_adj_688 ), 
    .C1(\uart_rx1/r_Clock_Count_2 ), .B1(\uart_rx1/r_Clock_Count_3 ), 
    .A1(\uart_rx1/r_Clock_Count_5 ), .D0(\uart_rx1/n1425 ), 
    .C0(\uart_rx1/r_Clock_Count_7 ), .B0(\uart_rx1/r_Clock_Count_8 ), 
    .A0(\uart_rx1/r_Clock_Count_6 ), .M0(i_Rx_Serial_c), .CLK(osc_clk), 
    .F0(\uart_rx1/n4 ), .Q0(\uart_rx1/r_Rx_Data_R ), .F1(\uart_rx1/n1425 ));
  uart_rx1_SLICE_53 \uart_rx1/SLICE_53 ( .D1(\uart_rx1/n1394 ), 
    .C1(\uart_rx1/n8 ), .B1(\uart_rx1/n1310 ), .A1(\uart_rx1/r_Clock_Count_7 ), 
    .D0(\uart_rx1/n6_adj_687 ), .C0(\uart_rx1/r_Clock_Count_13 ), 
    .B0(\uart_rx1/r_Clock_Count_12 ), .A0(\uart_rx1/r_Clock_Count_11 ), 
    .F0(\uart_rx1/n1394 ), .F1(\uart_rx1/r_SM_Main_2_N_558_0 ));
  SLICE_54 SLICE_54( .D1(\uart_tx1/r_SM_Main_0 ), .C1(\uart_tx1/r_SM_Main_1 ), 
    .B1(\uart_tx1/r_SM_Main_2_N_646_1 ), .A1(\uart_tx1/r_SM_Main_2 ), 
    .D0(\uart_tx1/r_SM_Main_2_N_646_1 ), .C0(\uart_tx1/r_SM_Main_1 ), 
    .B0(\uart_tx1/r_SM_Main_2 ), .A0(\uart_tx1/r_SM_Main_0 ), 
    .M0(\uart_rx1/r_Rx_Data ), .CE(\uart_rx1/osc_clk_enable_16 ), 
    .CLK(osc_clk), .F0(\uart_tx1/osc_clk_enable_51 ), .Q0(o_Rx_Byte_c_0), 
    .F1(\uart_tx1/n916 ));
  uart_rx1_SLICE_55 \uart_rx1/SLICE_55 ( .D1(\uart_rx1/r_Bit_Index_0 ), 
    .C1(\uart_rx1/r_Bit_Index_2 ), .B1(\uart_rx1/n1518 ), 
    .A1(\uart_rx1/r_Bit_Index_1 ), .D0(\uart_rx1/r_Bit_Index_1 ), 
    .C0(\uart_rx1/n1518 ), .B0(\uart_rx1/r_Bit_Index_2 ), 
    .A0(\uart_rx1/r_Bit_Index_0 ), .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/osc_clk_enable_2 ), .CLK(osc_clk), 
    .F0(\uart_rx1/osc_clk_enable_3 ), .Q0(o_Rx_Byte_c_6), 
    .F1(\uart_rx1/osc_clk_enable_53 ));
  uart_rx1_SLICE_56 \uart_rx1/SLICE_56 ( .D1(\uart_rx1/r_Bit_Index_0 ), 
    .C1(\uart_rx1/r_Bit_Index_2 ), .B1(\uart_rx1/n1518 ), 
    .A1(\uart_rx1/r_Bit_Index_1 ), .D0(\uart_rx1/r_Bit_Index_0 ), 
    .C0(\uart_rx1/r_Bit_Index_2 ), .B0(\uart_rx1/n1518 ), 
    .A0(\uart_rx1/r_Bit_Index_1 ), .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/osc_clk_enable_55 ), .CLK(osc_clk), 
    .F0(\uart_rx1/osc_clk_enable_16 ), .Q0(o_Rx_Byte_c_4), 
    .F1(\uart_rx1/osc_clk_enable_55 ));
  SLICE_57 SLICE_57( .D1(\uart_rx1/r_Bit_Index_0 ), 
    .C1(\uart_rx1/r_Bit_Index_2 ), .B1(\uart_rx1/n1518 ), 
    .A1(\uart_rx1/r_Bit_Index_1 ), .D0(\uart_rx1/n1518 ), 
    .C0(\uart_rx1/r_Bit_Index_1 ), .B0(\uart_rx1/r_Bit_Index_0 ), 
    .A0(\uart_rx1/r_Bit_Index_2 ), .M1(o_Rx_Byte_c_1), .M0(o_Rx_Byte_c_0), 
    .CE(\uart_tx1/osc_clk_enable_30 ), .CLK(osc_clk), 
    .F0(\uart_rx1/osc_clk_enable_54 ), .Q0(\uart_tx1/r_Tx_Data_0 ), 
    .F1(\uart_rx1/osc_clk_enable_2 ), .Q1(\uart_tx1/r_Tx_Data_1 ));
  SLICE_58 SLICE_58( .D1(\uart_tx1/r_SM_Main_1 ), .C1(\uart_tx1/r_SM_Main_0 ), 
    .B1(\uart_tx1/r_SM_Main_2 ), .A1(o_Rx_DV_c_0), .C0(\uart_tx1/r_SM_Main_0 ), 
    .B0(\uart_tx1/r_SM_Main_1 ), .A0(\uart_tx1/r_SM_Main_2 ), 
    .M0(\uart_rx1/r_Rx_Data ), .CE(\uart_rx1/osc_clk_enable_52 ), 
    .CLK(osc_clk), .F0(\uart_tx1/n1305 ), .Q0(o_Rx_Byte_c_1), 
    .F1(\uart_tx1/osc_clk_enable_30 ));
  SLICE_59 SLICE_59( .C1(\uart_rx1/r_Clock_Count_8 ), 
    .B1(\uart_rx1/r_Clock_Count_10 ), .A1(\uart_rx1/n1425 ), 
    .B0(\uart_rx1/r_Clock_Count_4 ), .A0(\uart_rx1/r_Clock_Count_1 ), 
    .M1(o_Rx_Byte_c_3), .M0(o_Rx_Byte_c_2), .CE(\uart_tx1/osc_clk_enable_30 ), 
    .CLK(osc_clk), .F0(\uart_rx1/n6_adj_688 ), .Q0(\uart_tx1/r_Tx_Data_2 ), 
    .F1(\uart_rx1/n8 ), .Q1(\uart_tx1/r_Tx_Data_3 ));
  uart_rx1_SLICE_60 \uart_rx1/SLICE_60 ( .B1(\uart_rx1/r_Bit_Index_1 ), 
    .A1(\uart_rx1/r_Bit_Index_0 ), .C0(\uart_rx1/r_SM_Main_0 ), 
    .B0(\uart_rx1/r_SM_Main_2 ), .A0(\uart_rx1/r_SM_Main_1 ), 
    .M0(\uart_rx1/r_Rx_Data ), .CE(\uart_rx1/osc_clk_enable_56 ), 
    .CLK(osc_clk), .F0(\uart_rx1/n1419 ), .Q0(o_Rx_Byte_c_5), 
    .F1(\uart_rx1/n1521 ));
  o_Rx_Byte_7_ \o_Rx_Byte[7]_I ( .PADDO(o_Rx_Byte_c_7), 
    .oRxByte7(o_Rx_Byte[7]));
  o_Rx_DV o_Rx_DV_I( .PADDO(o_Rx_DV_c_0), .o_Rx_DV(o_Rx_DV));
  o_Tx_Serial o_Tx_Serial_I( .PADDO(o_Tx_Serial_c), .o_Tx_Serial(o_Tx_Serial));
  RFIn RFIn_I( .PADDI(RFIn_c), .RFIn(RFIn));
  i_Rx_Serial i_Rx_Serial_I( .PADDI(i_Rx_Serial_c), .i_Rx_Serial(i_Rx_Serial));
  MYLED_0_ \MYLED[0]_I ( .PADDO(VCC_net), .MYLED0(MYLED[0]));
  MYLED_1_ \MYLED[1]_I ( .PADDO(MYLED_c), .MYLED1(MYLED[1]));
  MYLED_2_ \MYLED[2]_I ( .PADDO(MYLED_c), .MYLED2(MYLED[2]));
  MYLED_3_ \MYLED[3]_I ( .PADDO(MYLED_c), .MYLED3(MYLED[3]));
  MYLED_4_ \MYLED[4]_I ( .PADDO(MYLED_c), .MYLED4(MYLED[4]));
  MYLED_5_ \MYLED[5]_I ( .PADDO(MYLED_c), .MYLED5(MYLED[5]));
  MYLED_6_ \MYLED[6]_I ( .PADDO(MYLED_c), .MYLED6(MYLED[6]));
  MYLED_7_ \MYLED[7]_I ( .PADDO(MYLED_c), .MYLED7(MYLED[7]));
  o_Rx_Byte_0_ \o_Rx_Byte[0]_I ( .PADDO(o_Rx_Byte_c_0), 
    .oRxByte0(o_Rx_Byte[0]));
  o_Rx_Byte_1_ \o_Rx_Byte[1]_I ( .PADDO(o_Rx_Byte_c_1), 
    .oRxByte1(o_Rx_Byte[1]));
  o_Rx_Byte_2_ \o_Rx_Byte[2]_I ( .PADDO(o_Rx_Byte_c_2), 
    .oRxByte2(o_Rx_Byte[2]));
  o_Rx_Byte_3_ \o_Rx_Byte[3]_I ( .PADDO(o_Rx_Byte_c_3), 
    .oRxByte3(o_Rx_Byte[3]));
  o_Rx_Byte_4_ \o_Rx_Byte[4]_I ( .PADDO(o_Rx_Byte_c_4), 
    .oRxByte4(o_Rx_Byte[4]));
  o_Rx_Byte_5_ \o_Rx_Byte[5]_I ( .PADDO(o_Rx_Byte_c_5), 
    .oRxByte5(o_Rx_Byte[5]));
  o_Rx_Byte_6_ \o_Rx_Byte[6]_I ( .PADDO(o_Rx_Byte_c_6), 
    .oRxByte6(o_Rx_Byte[6]));
  OSCH_inst OSCH_inst( .OSC(osc_clk));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCC_net));
  GSR GSR_INST( .GSR(VCCI));
endmodule

module uart_tx1_SLICE_0 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_tx1/r_Clock_Count_182__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \uart_tx1/r_Clock_Count_182__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \uart_tx1/r_Clock_Count_182_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module uart_tx1_SLICE_1 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_tx1/r_Clock_Count_182__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \uart_tx1/r_Clock_Count_182__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \uart_tx1/r_Clock_Count_182_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_2 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_tx1/r_Clock_Count_182__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \uart_tx1/r_Clock_Count_182__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \uart_tx1/r_Clock_Count_182_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_3 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_tx1/r_Clock_Count_182__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \uart_tx1/r_Clock_Count_182__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \uart_tx1/r_Clock_Count_182_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_4 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_tx1/r_Clock_Count_182__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \uart_tx1/r_Clock_Count_182__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \uart_tx1/r_Clock_Count_182_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_5 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_tx1/r_Clock_Count_182__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \uart_tx1/r_Clock_Count_182__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \uart_tx1/r_Clock_Count_182_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_6 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CE_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_tx1/r_Clock_Count_182__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  ccu20001 \uart_tx1/r_Clock_Count_182_add_4_17 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module uart_tx1_SLICE_7 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_tx1/r_Clock_Count_182__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \uart_tx1/r_Clock_Count_182__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \uart_tx1/r_Clock_Count_182_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_8 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_tx1/r_Clock_Count_182__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  ccu20002 \uart_tx1/r_Clock_Count_182_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module uart_rx1_SLICE_9 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_rx1/r_Clock_Count_180__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \uart_rx1/r_Clock_Count_180_add_4_17 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_10 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_rx1/r_Clock_Count_180__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart_rx1/r_Clock_Count_180__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \uart_rx1/r_Clock_Count_180_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_11 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_rx1/r_Clock_Count_180__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart_rx1/r_Clock_Count_180__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \uart_rx1/r_Clock_Count_180_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_12 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_rx1/r_Clock_Count_180__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart_rx1/r_Clock_Count_180__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \uart_rx1/r_Clock_Count_180_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_13 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_rx1/r_Clock_Count_180__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart_rx1/r_Clock_Count_180__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \uart_rx1/r_Clock_Count_180_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_14 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_rx1/r_Clock_Count_180__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart_rx1/r_Clock_Count_180__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \uart_rx1/r_Clock_Count_180_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_15 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_rx1/r_Clock_Count_180__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart_rx1/r_Clock_Count_180__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \uart_rx1/r_Clock_Count_180_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_16 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_rx1/r_Clock_Count_180__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart_rx1/r_Clock_Count_180__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \uart_rx1/r_Clock_Count_180_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_17 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \uart_rx1/r_Clock_Count_180__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \uart_rx1/r_Clock_Count_180_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_18 ( input A0, DI0, M1, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut4 \Mixer1/i157_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart_rx1/r_Rx_Data_50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 \Mixer1/MixerOutSin_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0003 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vmuxregsre0004 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module uart_rx1_SLICE_28 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40005 \uart_rx1/i1238_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40006 \uart_rx1/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0004 \uart_rx1/r_Rx_DV_52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0405) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_29 ( input C1, B1, A1, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, CE_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40007 \uart_tx1/i2_2_lut_rep_12_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \uart_tx1/i757_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0004 \uart_tx1/o_Tx_Serial_44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE5E5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_30 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40009 \uart_rx1/i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \uart_rx1/i1_2_lut_adj_7 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre0004 \uart_rx1/r_Bit_Index_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 \uart_rx1/r_Bit_Index_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2828) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_31 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40011 \uart_rx1/i1230_2_lut_3_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40012 \uart_rx1/i1_4_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0004 \uart_rx1/r_Bit_Index_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_34 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M0, LSR, CLK, 
    output OFX0, Q0 );
  wire   \uart_rx1/SLICE_34/uart_rx1/SLICE_34_K1_H1 , GNDI, 
         \uart_rx1/SLICE_34/uart_rx1/i1242/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         LSR_dly;

  lut40013 \uart_rx1/SLICE_34_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\uart_rx1/SLICE_34/uart_rx1/SLICE_34_K1_H1 ));
  lut40014 \uart_rx1/i1242/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\uart_rx1/SLICE_34/uart_rx1/i1242/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/r_SM_Main_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \uart_rx1/SLICE_34_K0K1MUX ( 
    .D0(\uart_rx1/SLICE_34/uart_rx1/i1242/GATE_H0 ), 
    .D1(\uart_rx1/SLICE_34/uart_rx1/SLICE_34_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA3A3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module uart_rx1_SLICE_35 ( input B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40015 \uart_rx1/i1_2_lut_rep_11 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \uart_rx1/r_SM_Main_2__I_0_56_Mux_1_i3_4_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart_rx1/r_SM_Main_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h770C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_36 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40017 \uart_rx1/i14_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 \uart_rx1/i1_4_lut_adj_2 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart_rx1/r_SM_Main_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2505) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_37 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40009 \uart_tx1/i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \uart_tx1/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0004 \uart_tx1/r_Bit_Index_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 \uart_tx1/r_Bit_Index_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_38 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40019 \uart_tx1/i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 \uart_tx1/i1_4_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0004 \uart_tx1/r_Bit_Index_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_39 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40020 \uart_tx1/i12_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 \uart_tx1/i416_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \uart_tx1/r_SM_Main_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart_tx1/r_SM_Main_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6C6C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3A3A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_40 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40022 \uart_tx1/i415_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40023 \uart_tx1/i5_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_tx1/r_SM_Main_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40023 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_43 ( input M1, M0, CE, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40024 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0004 \uart_tx1/r_Tx_Data_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 \uart_tx1/r_Tx_Data_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_44 ( input C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40007 \uart_rx1/i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 \uart_rx1/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0004 \uart_tx1/r_Tx_Data_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 \uart_tx1/r_Tx_Data_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_i1197_SLICE_45 ( input C1, B1, A1, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   GNDI, \uart_tx1/i1197/SLICE_45/uart_tx1/i1197/SLICE_45_K1_H1 , 
         \uart_tx1/i1197/SLICE_45/uart_tx1/i1197/GATE_H0 ;

  lut40025 \uart_tx1/i1197/SLICE_45_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\uart_tx1/i1197/SLICE_45/uart_tx1/i1197/SLICE_45_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 \uart_tx1/i1197/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\uart_tx1/i1197/SLICE_45/uart_tx1/i1197/GATE_H0 ));
  selmux2 \uart_tx1/i1197/SLICE_45_K0K1MUX ( 
    .D0(\uart_tx1/i1197/SLICE_45/uart_tx1/i1197/GATE_H0 ), 
    .D1(\uart_tx1/i1197/SLICE_45/uart_tx1/i1197/SLICE_45_K1_H1 ), .SD(M0), 
    .Z(OFX0));
  selmux2 \uart_tx1/i1197/SLICE_45_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_i1196_SLICE_46 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \uart_tx1/i1196/SLICE_46/uart_tx1/i1196/SLICE_46_K1_H1 , 
         \uart_tx1/i1196/SLICE_46/uart_tx1/i1196/GATE_H0 ;

  lut40025 \uart_tx1/i1196/SLICE_46_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\uart_tx1/i1196/SLICE_46/uart_tx1/i1196/SLICE_46_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 \uart_tx1/i1196/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\uart_tx1/i1196/SLICE_46/uart_tx1/i1196/GATE_H0 ));
  selmux2 \uart_tx1/i1196/SLICE_46_K0K1MUX ( 
    .D0(\uart_tx1/i1196/SLICE_46/uart_tx1/i1196/GATE_H0 ), 
    .D1(\uart_tx1/i1196/SLICE_46/uart_tx1/i1196/SLICE_46_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_47 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40027 \uart_tx1/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 \uart_tx1/i960_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0004 \uart_rx1/r_Rx_Byte_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCC8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_48 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40027 \uart_tx1/i4_4_lut_adj_8 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 \uart_tx1/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0004 \uart_rx1/r_Rx_Byte_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_49 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40029 \uart_rx1/i1241_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 \uart_rx1/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_50 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40031 \uart_rx1/i2_3_lut_rep_10_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40032 \uart_rx1/i1219_2_lut_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0004 \uart_rx1/r_Rx_Byte_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_51 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly;

  lut40033 \uart_rx1/i1190_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40034 \uart_rx1/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0004 \Mixer1/RFInR_17 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 \Mixer1/RFInR1_16 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE0E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5011) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_52 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  lut40027 \uart_rx1/i4_4_lut_adj_5 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 \uart_rx1/i1_4_lut_adj_3 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \uart_rx1/r_Rx_Data_R_49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_53 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40035 \uart_rx1/i1_4_lut_adj_4 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40027 \uart_rx1/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_54 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40036 \uart_tx1/i1211_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40037 \uart_tx1/i1233_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0004 \uart_rx1/r_Rx_Byte_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4445) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_55 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40038 \uart_rx1/i1227_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40039 \uart_rx1/i1215_2_lut_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0004 \uart_rx1/r_Rx_Byte_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_56 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40040 \uart_rx1/i1221_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40041 \uart_rx1/i1205_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0004 \uart_rx1/r_Rx_Byte_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_57 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40042 \uart_rx1/i1217_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40043 \uart_rx1/i1224_2_lut_3_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0004 \uart_tx1/r_Tx_Data_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0004 \uart_tx1/r_Tx_Data_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_58 ( input D1, C1, B1, A1, C0, B0, A0, M0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40038 \uart_tx1/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 \uart_tx1/i1235_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0004 \uart_rx1/r_Rx_Byte_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_59 ( input C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40023 \uart_rx1/i3_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 \uart_rx1/i1_2_lut_adj_6 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre0004 \uart_tx1/r_Tx_Data_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 \uart_tx1/r_Tx_Data_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_60 ( input B1, A1, C0, B0, A0, M0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40045 \uart_rx1/i1_2_lut_rep_13 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 \uart_rx1/i1208_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0004 \uart_rx1/r_Rx_Byte_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDFDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module o_Rx_Byte_7_ ( input PADDO, output oRxByte7 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_7( .I(PADDO), .T(GNDI), .PAD(oRxByte7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte7) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module o_Rx_DV ( input PADDO, output o_Rx_DV );
  wire   GNDI;

  xo2iobuf o_Rx_DV_pad( .I(PADDO), .T(GNDI), .PAD(o_Rx_DV));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => o_Rx_DV) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Tx_Serial ( input PADDO, output o_Tx_Serial );
  wire   GNDI;

  xo2iobuf o_Tx_Serial_pad( .I(PADDO), .T(GNDI), .PAD(o_Tx_Serial));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => o_Tx_Serial) = (0:0:0,0:0:0);
  endspecify

endmodule

module RFIn ( output PADDI, input RFIn );

  xo2iobuf0047 RFIn_pad( .Z(PADDI), .PAD(RFIn));

  specify
    (RFIn => PADDI) = (0:0:0,0:0:0);
    $width (posedge RFIn, 0:0:0);
    $width (negedge RFIn, 0:0:0);
  endspecify

endmodule

module xo2iobuf0047 ( output Z, input PAD );

  IB INST1( .I(PAD), .O(Z));
endmodule

module i_Rx_Serial ( output PADDI, input i_Rx_Serial );

  xo2iobuf0048 i_Rx_Serial_pad( .Z(PADDI), .PAD(i_Rx_Serial));

  specify
    (i_Rx_Serial => PADDI) = (0:0:0,0:0:0);
    $width (posedge i_Rx_Serial, 0:0:0);
    $width (negedge i_Rx_Serial, 0:0:0);
  endspecify

endmodule

module xo2iobuf0048 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module MYLED_0_ ( input PADDO, output MYLED0 );
  wire   GNDI;

  xo2iobuf MYLED_pad_0( .I(PADDO), .T(GNDI), .PAD(MYLED0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED0) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_1_ ( input PADDO, output MYLED1 );
  wire   GNDI;

  xo2iobuf MYLED_pad_1( .I(PADDO), .T(GNDI), .PAD(MYLED1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED1) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_2_ ( input PADDO, output MYLED2 );
  wire   GNDI;

  xo2iobuf MYLED_pad_2( .I(PADDO), .T(GNDI), .PAD(MYLED2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED2) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_3_ ( input PADDO, output MYLED3 );
  wire   GNDI;

  xo2iobuf MYLED_pad_3( .I(PADDO), .T(GNDI), .PAD(MYLED3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED3) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_4_ ( input PADDO, output MYLED4 );
  wire   GNDI;

  xo2iobuf MYLED_pad_4( .I(PADDO), .T(GNDI), .PAD(MYLED4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED4) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_5_ ( input PADDO, output MYLED5 );
  wire   GNDI;

  xo2iobuf MYLED_pad_5( .I(PADDO), .T(GNDI), .PAD(MYLED5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED5) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_6_ ( input PADDO, output MYLED6 );
  wire   GNDI;

  xo2iobuf MYLED_pad_6( .I(PADDO), .T(GNDI), .PAD(MYLED6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED6) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_7_ ( input PADDO, output MYLED7 );
  wire   GNDI;

  xo2iobuf MYLED_pad_7( .I(PADDO), .T(GNDI), .PAD(MYLED7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED7) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_0_ ( input PADDO, output oRxByte0 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_0( .I(PADDO), .T(GNDI), .PAD(oRxByte0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte0) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_1_ ( input PADDO, output oRxByte1 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_1( .I(PADDO), .T(GNDI), .PAD(oRxByte1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte1) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_2_ ( input PADDO, output oRxByte2 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_2( .I(PADDO), .T(GNDI), .PAD(oRxByte2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte2) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_3_ ( input PADDO, output oRxByte3 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_3( .I(PADDO), .T(GNDI), .PAD(oRxByte3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte3) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_4_ ( input PADDO, output oRxByte4 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_4( .I(PADDO), .T(GNDI), .PAD(oRxByte4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte4) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_5_ ( input PADDO, output oRxByte5 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_5( .I(PADDO), .T(GNDI), .PAD(oRxByte5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte5) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_6_ ( input PADDO, output oRxByte6 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_6( .I(PADDO), .T(GNDI), .PAD(oRxByte6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte6) = (0:0:0,0:0:0);
  endspecify

endmodule

module OSCH_inst ( output OSC );
  wire   GNDI;

  OSCH_B OSCH_inst_OSCH( .STDBY(GNDI), .OSC(OSC), .SEDSTDBY());
  gnd DRIVEGND( .PWR0(GNDI));
endmodule

module OSCH_B ( input STDBY, output OSC, SEDSTDBY );

  OSCH INST10( .STDBY(STDBY), .SEDSTDBY(SEDSTDBY), .OSC(OSC));
  defparam INST10.NOM_FREQ = "133.00";
endmodule
